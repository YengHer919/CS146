# Lab 5

Similar to lab 4, I recursively checked if each left node was less than the current node
and the right was greater than the current node. However, this would not satisfy the 
definition of a binary search tree. I learned in class that we needed to implement an
upper and lower bounds for each node within the binary search tree. So I implemented a
function to do so within each recursive call. I coded it in java, then translated
to python. 

I learned how to set the default upper and lower bounds by searching it up and including
it into my code. My comparison was achieved by I compareing the children to the upper 
and lower bounds, and to their parent's (current) value, ensuring that they didn't go
too far (past the bounds), but also met the expectation of being less/greater than
their parent.
