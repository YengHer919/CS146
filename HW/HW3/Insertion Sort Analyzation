This is an insertion sort code from GeeksForGeeks.com

 /*Function to sort array using insertion sort*/
    void sort(int arr[])
    {
        int n = arr.length;
        for (int i = 1; i < n; ++i) {
            int key = arr[i];
            int j = i - 1;
 
            /* Move elements of arr[0..i-1], that are
               greater than key, to one position ahead
               of their current position */
            while (j >= 0 && arr[j] > key) {
                arr[j + 1] = arr[j];
                j = j - 1;
            }
            arr[j + 1] = key;
        }
    }

Insertion sort has a while loop nested within a for loop which iterates over the entire list
Best case, insertion sort has O(N) runtime, however, the while loop usually runs at least
N times, if not more. Being nested within a loop on N times makes the while loop and the 
overall algorithm O(N^2)


